[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "flogin"
description = "A Python wrapper for Flow Launcher's v2 python api"
readme = { file = "README.rst", content-type = "text/x-rst" }
requires-python = ">=3.11"
authors = [{ name = "cibere" }]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Operating System :: Microsoft :: Windows :: Windows 11",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
    "Programming Language :: Python :: Implementation :: CPython",
]
dynamic = ["version"]
dependencies = [
    "aioconsole==0.8.1"
]

[project.urls]
Documentation = "https://flogin.readthedocs.io/en/latest/"
"Issue tracker" = "https://github.com/cibere/flogin/issues"

[project.optional-dependencies]
docs = [
    "sphinx>=7.0.0,<9.0.0",
    "furo==2024.8.6", # theme // https://pradyunsg.me/furo/customisation/announcement/
    "sphinx-autodoc-typehints>=1.25.0,<4.0.0",  # https://github.com/tox-dev/sphinx-autodoc-typehints
    "sphinx-toolbox>=3.5,<4.0",  # https://sphinx-toolbox.readthedocs.io/en/latest/extensions/index.html
    "sphinxcontrib-trio==1.1.2",
    "sphinx-copybutton==0.5.2",
]
tests = [
    "pytest==8.3.4",
    "pytest-asyncio==0.25.1",
]

[tool.setuptools]
packages = [
    "flogin",
    "flogin.flow",
    "flogin.jsonrpc",
    "flogin.testing"
]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "module"

[tool.ruff]
exclude = ["venv", "docs", "tests", "examples"]

[tool.ruff.lint]
select = [
    "C4", # https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "E", # https://docs.astral.sh/ruff/rules/#error-e_1
    "F", # https://docs.astral.sh/ruff/rules/#pyflakes-f
    "G", # https://docs.astral.sh/ruff/rules/#flake8-logging-format-g
    "I", # https://docs.astral.sh/ruff/rules/#isort-i
    #"PTH", # https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
    "RUF", # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
    "SIM", # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
    "TC", # https://docs.astral.sh/ruff/rules/#flake8-type-checking-tc
    "UP", # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "W", # https://docs.astral.sh/ruff/rules/#warning-w
    "PERF", # https://docs.astral.sh/ruff/rules/#perflint-perf
    "ANN",  # https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
]
ignore = [
    "F403", # https://docs.astral.sh/ruff/rules/undefined-local-with-import-star/#undefined-local-with-import-star-f403
    "G004", # https://docs.astral.sh/ruff/rules/logging-f-string/
    "SIM105", # https://docs.astral.sh/ruff/rules/suppressible-exception/
    "E501", # https://docs.astral.sh/ruff/rules/#error-e_1
    "ANN401", # https://docs.astral.sh/ruff/rules/any-type/
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"